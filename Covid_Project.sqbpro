<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/User/Desktop/RUBY/Data_Projects/Covid Project/Covid_Project.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8091"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,30:mainV_RollingCountVaccVsPopulation"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Covid_Deaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="65"/><column index="2" value="140"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="76"/><column index="6" value="84"/><column index="7" value="80"/><column index="8" value="152"/><column index="9" value="92"/><column index="10" value="88"/><column index="11" value="160"/><column index="12" value="161"/><column index="13" value="157"/><column index="14" value="229"/><column index="15" value="169"/><column index="16" value="165"/><column index="17" value="237"/><column index="18" value="128"/><column index="19" value="88"/><column index="20" value="165"/><column index="21" value="101"/><column index="22" value="178"/><column index="23" value="157"/><column index="24" value="234"/><column index="25" value="170"/><column index="26" value="247"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Covid_Vaccinations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="65"/><column index="2" value="70"/><column index="3" value="135"/><column index="4" value="73"/><column index="5" value="81"/><column index="6" value="77"/><column index="7" value="180"/><column index="8" value="176"/><column index="9" value="149"/><column index="10" value="248"/><column index="11" value="95"/><column index="12" value="110"/><column index="13" value="98"/><column index="14" value="128"/><column index="15" value="130"/><column index="16" value="165"/><column index="17" value="105"/><column index="18" value="124"/><column index="19" value="196"/><column index="20" value="220"/><column index="21" value="222"/><column index="22" value="257"/><column index="23" value="197"/><column index="24" value="273"/><column index="25" value="237"/><column index="26" value="300"/><column index="27" value="119"/><column index="28" value="132"/><column index="29" value="86"/><column index="30" value="105"/><column index="31" value="105"/><column index="32" value="110"/><column index="33" value="122"/><column index="34" value="160"/><column index="35" value="144"/><column index="36" value="113"/><column index="38" value="154"/><column index="39" value="197"/><column index="40" value="110"/><column index="41" value="185"/><column index="42" value="261"/><column index="43" value="197"/><column index="44" value="119"/><column index="45" value="274"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_RollingCountVaccVsPopulation" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="71"/><column index="2" value="60"/><column index="3" value="60"/><column index="4" value="76"/><column index="5" value="90"/><column index="6" value="154"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_TtlDeathsByContinent" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="78"/><column index="2" value="134"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="V_TtlVaccinationsByContient" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="78"/><column index="2" value="106"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="temp" name="PERCENTpopVACC" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="71"/><column index="2" value="74"/><column index="3" value="73"/><column index="4" value="76"/><column index="5" value="90"/><column index="6" value="151"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1"> /* CREATED BY: RUBY SMITH
CREATED ON: 7/31/2023
DESCRIPTION: CHECKING IMPORTED DATA: 328953 RECORDS*/

SELECT 
	*
FROM
	Covid_Deaths;
	
SELECT 
	*
FROM
	Covid_Vaccinations;
	
SELECT
	location, 
	date, 
	total_cases, 
	new_cases, 
	total_deaths, 
	population
FROM
	Covid_Deaths
ORDER BY 
	location,
	date;

/* DESCRIPTION: THESE TABLES SHOW PERCENTAGE OF DEATHS CAUSED BY COVID PER DAY. SECOND QUERY SHOWS THE UNITED STATES.  */

SELECT
	location, 
	date, 
	total_cases, 
	total_deaths, 
	(total_deaths/total_cases) * 100 AS 'TtlDeathsPerCasePercentage'
FROM
	Covid_Deaths
ORDER BY 
	location,
	date;
	
SELECT
	location, 
	date, 
	total_cases, 
	total_deaths, 
	(total_deaths/total_cases) * 100 AS 'TtlDeathsPerCasePercentage'
FROM
	Covid_Deaths
WHERE
	location LIKE 'United States'
ORDER BY 
	location,
	date;
	
/* DESCRIPTION: THIS TABLE SHOWS THE PERCENTAGE OF THE POPULATION THAT HAS GOTTEN COVID PER DAY IN THE UNITED STATES.  */

SELECT
	location, 
	date, 
	population,	
	total_cases,  
	(total_cases/population) * 100 AS 'TtlCasesInPopPercentage'
FROM
	Covid_Deaths
WHERE
	location LIKE 'United States'
ORDER BY 
	location,
	date;
	
/* DESCRIPTION: THIS TABLE SHOWS THE COUNTRIES WITH THE HIGHEST INFECTION PERCENTAGE COMPARED TO POPULATION. ORDERED BY PERCENTAGE DESCENDING. */

SELECT
	location AS 'Countries',
	population,
	MAX(total_cases) 'HighestInfectionCount',
	MAX((total_cases/population)) * 100 AS 'CasesInPopPercentage'
FROM
	Covid_Deaths
WHERE
	continent IS NOT NULL
GROUP BY
	location,
	population
ORDER BY 
	4 DESC;
	
/* DESCRIPTION: THIS TABLE SHOWS THE COUNTRIES ORDERED BY THE HIGHEST DEATHS */

SELECT
	location AS 'Countries',
	MAX(total_deaths) AS 'HighestDeathCount'
FROM
	Covid_Deaths
WHERE
	continent IS NOT NULL
GROUP BY
	location
ORDER BY 
	2 DESC;

/* DESCRIPTION: THIS TABLE SHOWS THE CONTINENTS ORDERED BY THE HIGHEST DEATHS */

SELECT
	location AS 'Continents',
	MAX(total_deaths) AS 'HighestDeathCount'
FROM
	Covid_Deaths
WHERE
	continent IS NULL 
	AND location IN ('World', 'Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania')
GROUP BY
	location
ORDER BY 
	2 DESC;
	
/* CREATED BY: RUBY SMITH
CREATED ON: 8/01/2023
DESCRIPTION: CONTINUED QUERIES FROM COVID DATA.  THIS TABLE SHOWS THE GLOBAL AMOUNT OF CASES PER DAY.*/

SELECT 
	date, 
	SUM(new_cases) AS 'CasesPerDay'
FROM
	Covid_Deaths
WHERE 
	continent IS NOT NULL
GROUP BY
	date
ORDER BY 
	1;

/* DESCRIPTION: THIS TABLE SHOWS THE TOTAL CASES, TOTAL DEATHS, AND PERCENTAGE OF DEATHS/CASES PER DAY GLOBALLY. */	
SELECT 
	date, 
	SUM(new_cases) AS 'CasesPerDay',
	SUM(new_deaths) AS 'DeathsPerDay',
	(SUM(new_deaths)/SUM(new_cases)) * 100 AS 'DeathsPerCasePercentage'
FROM
	Covid_Deaths
WHERE 
	continent IS NOT NULL
GROUP BY
	date
ORDER BY 
	1;

/* DESCRIPTION: THIS TABLE SHOWS THE OVERALL TOTAL CASES, TOTAL DEATHS, AND DEATHS/CASES PERCENTAGE SINCE THE START UNTIL 2023-07-26 */	
	
SELECT  
	SUM(new_cases) AS 'TotalCases',
	SUM(new_deaths) AS 'TotalDeaths',
	(SUM(new_deaths)/SUM(new_cases)) * 100 AS 'DeathsPerCasePercentage'
FROM
	Covid_Deaths
WHERE 
	continent IS NOT NULL;

/*DESCRIPTION: THIS TABLE SHOWS THE AVERAGE POSITIVITY RATE, TOTAL TESTS, AND TOTAL VACCINATIONS PER COUNTRY */
	
SELECT
	location AS 'Countries',
	AVG(positive_rate) * 100 AS 'AvgPositivityRate',
	MAX(total_tests) AS 'CovidTests',
	MAX(total_vaccinations) AS 'TotalVaccGiven'
FROM
	Covid_Vaccinations
WHERE 
	continent IS NOT NULL
GROUP BY 
	location
ORDER BY 
	2 DESC;

/* DESCRIPTION: THIS TABLE SHOWS TOTAL VACCINATIONS GIVEN BY CONTINENT */	
SELECT
	location AS 'Continents',
	MAX(total_vaccinations) AS 'TotalVaccGiven'
FROM
	Covid_Vaccinations
WHERE 
	continent IS NULL 
	AND location IN ('World', 'Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania')
GROUP BY 
	location
ORDER BY 
	2 DESC;
	
/* DESCRIPTION: CHECKING JOIN DATA COVID DEATH AND VACCINATION TABLE */

SELECT
	*
FROM 
	Covid_Deaths AS d
JOIN
	Covid_Vaccinations AS v
	ON 
	d.location = v.location
	AND
	d.date = v.date;

/* DESCRIPTION: THIS TABLE SHOWS A JOIN BETWEEN COVID DEATHS AND VACCINATIONS WITH A ROLLING SUM OF VACCINATIONS UPDATED BY DAY IN EACH COUNTRY. */
SELECT
	d.continent AS 'Continent',
	d.location AS 'Country', 
	d.date AS 'Date',
	d.population AS 'Population',
	v.new_vaccinations AS 'Vaccinations',
	SUM(v.new_vaccinations) 
		OVER 
			(PARTITION BY d.location 
			ORDER BY d.location, d.date) AS 'RollingSum_VaccCount'
FROM 
	Covid_Deaths AS d
JOIN
	Covid_Vaccinations AS v
	ON 
	d.location = v.location
	AND
	d.date = v.date
WHERE 
	d.continent IS NOT NULL
ORDER BY
	2,1,3;


/* DESCRIPTION: CREATE CTE TO USE ROLLINGSUM TO CALCULATE THE PERCENTAGE OF ROLLINGSUM/POPULATION */

WITH POPVAC (continent, location, date, population, new_vaccinations, RollingSUMPeopleVacc) AS
(
SELECT
	d.continent AS 'Continent',
	d.location AS 'Country', 
	d.date AS 'Date',
	d.population AS 'Population',
	v.new_vaccinations AS 'Vaccinations',
	SUM(v.new_vaccinations) 
		OVER 
			(PARTITION BY d.location 
			ORDER BY d.location, d.date) AS 'RollingSUMPeopleVacc'
FROM 
	Covid_Deaths AS d
JOIN
	Covid_Vaccinations AS v
	ON 
	d.location = v.location
	AND
	d.date = v.date
WHERE 
	d.continent IS NOT NULL
)
SELECT 
	*, (RollingSUMPeopleVacc/population) * 100 AS 'PercentOfPplVacc'
FROM
	POPVAC
ORDER BY
	2,1,3;
	
/* DESCRIPTION: OR CREATE A TEMP TABLE. USING DROP TABLE BEFORE IN CASE QUERY FOR TABLE IS CHANGED. */

DROP TABLE IF EXISTS PERCENTpopVACC;
CREATE TEMPORARY TABLE PERCENTpopVACC AS
SELECT
	d.continent AS 'Continent',
	d.location AS 'Country', 
	d.date AS 'Date',
	d.population AS 'Population',
	v.new_vaccinations AS 'Vaccinations',
	SUM(v.new_vaccinations) 
		OVER 
			(PARTITION BY d.location 
			ORDER BY d.location, d.date) AS 'RollingSUMPeopleVacc'
FROM 
	Covid_Deaths AS d
JOIN
	Covid_Vaccinations AS v
	ON 
	d.location = v.location
	AND
	d.date = v.date
WHERE 
	d.continent IS NOT NULL;

/* DESCRIPTION: PERCENTAGE OF PEOPLE VACCINATED BY POPULATION OF EACH COUNTRY BY DAY. QUERY AVAILABLE AFTER CREATING TEMP TABLE ABOVE. */	
	
SELECT 
	*, (RollingSUMPeopleVacc/population) * 100 AS 'PercentOfPplVacc'
FROM
	PERCENTpopVACC
ORDER BY
	2,1,3;

/* CREATED BY: RUBY SMITH
CREATED ON: 08/02/2023
DESCRIPTION: CONTINUING QUERY OF COVID DATABASE. THIS VIEW SHOWS THE TOTAL DEATHS FROM COVID BY CONTINENT. */

DROP VIEW IF EXISTS V_TtlDeathsByContinent;
CREATE VIEW V_TtlDeathsByContinent AS
	SELECT
		location AS 'Continents',
		MAX(total_deaths) AS 'Total_Death_Count'
	FROM
		Covid_Deaths
	WHERE
		continent IS NULL 
		AND location IN ('World', 'Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania')
	GROUP BY
		location
	ORDER BY 
		2 DESC;

/* DESCRIPTION: CREATED VIEW. THIS VIEW SHOWS THE TOTAL COUNT OF VACCINATIONS GIVEN BY CONTINENT */

DROP VIEW IF EXISTS V_TtlVaccinationsByContient;
CREATE VIEW V_TtlVaccinationsByContient AS
	SELECT
		location AS 'Continents',
		MAX(total_vaccinations) AS 'Total_Vaccination_Count'
	FROM
		Covid_Vaccinations
	WHERE 
		continent IS NULL 
		AND location IN ('World', 'Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania')
	GROUP BY 
		location
	ORDER BY 
		2 DESC;

/*DESCRIPTION: THIS VIEW SHOWS A JOIN BETWEEN COVID DEATHS AND VACCINATIONS WITH A ROLLING SUM OF VACCINATIONS UPDATED BY DAY IN EACH COUNTRY. */

DROP VIEW IF EXISTS V_RollingCountVaccVsPopulation;
CREATE VIEW V_RollingCountVaccVsPopulation AS
	SELECT
	d.continent AS 'Continent',
	d.location AS 'Country', 
	d.date AS 'Date',
	d.population AS 'Population',
	v.new_vaccinations AS 'Vaccinations',
	SUM(v.new_vaccinations) 
		OVER 
			(PARTITION BY d.location 
			ORDER BY d.location, d.date) AS 'RollingSum_VaccCount'
	FROM 
		Covid_Deaths AS d
	JOIN
		Covid_Vaccinations AS v
		ON d.location = v.location
		AND d.date = v.date
	WHERE 
		d.continent IS NOT NULL
	ORDER BY
		2,1,3;
	

/* DESCRIPTION: THIS IS A JOIN OF TWO VIEWS THAT SHOW THE TOTAL DEATH COUNT AND TOTAL VACCINATIONS GIVEN BY CONTINENT AS OF 2023/07/26 */
		
SELECT 
	d.Continents,
	d.Total_Death_Count,
	v.Total_Vaccination_Count
FROM V_TtlDeathsByContinent AS d
JOIN V_TtlVaccinationsByContient AS v
ON d.Continents = v.Continents</sql><current_tab id="0"/></tab_sql></sqlb_project>
